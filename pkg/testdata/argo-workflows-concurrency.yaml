apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: build
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: branch
        default: master
      - name: pr
        default: -1
  volumeClaimTemplates:
    - metadata:
        name: work
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 64Mi
  synchronization:
    mutex:
      name: test
  templates:
    - name: main
      dag:
        tasks:
          - name: clone
            template: clone
          - name: test
            template: test
            depends: clone
          - name: goreleaser
            template: goreleaser
            depends: test
    - name: clone
      script:
        image: alpine/git:v2.26.2
        command: [sh]
        source: |
          branch=$(echo {{workflow.parameters.branch}} | sed -e 's/refs\/heads\///g')
          git clone --branch $branch https://gitee.com/LinuxSuRen/yaml-readme .
          if [ {{workflow.parameters.pr}} != -1 ]; then
            git fetch origin merge-requests/{{workflow.parameters.pr}}/head:mr-{{workflow.parameters.pr}}
            git checkout  mr-{{workflow.parameters.pr}}
          fi
        volumeMounts:
          - mountPath: /work
            name: work
        workingDir: /work
    - name: test
      script:
        image: golang:1.18
        command: [sh]
        env:
          - name: GOPROXY
            value: https://goproxy.io,direct
        source: |
          go test ./... -coverprofile coverage.out
        volumeMounts:
          - mountPath: /work
            name: work
        workingDir: /work
    - name: goreleaser
      script:
        image: goreleaser/goreleaser:v1.13.1
        command: [sh]
        env:
          - name: GOPROXY
            value: https://goproxy.io,direct
        source: |
          goreleaser release --skip-publish --rm-dist
        volumeMounts:
          - mountPath: /work
            name: work
        workingDir: /work